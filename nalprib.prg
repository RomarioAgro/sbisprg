# Функции для налогового учета и сверки его с бухгалтерским

Функция ПроверитьАналитику( Лицо )
# Проверяет, что указанное лицо является аналитикой из группы "ВИДЫ ДОХОДОВ/РАСХОДОВ"
{
   Если( Лицо.Лицо_.ТипЛица != "Аналитики" ) Ошибка("Указанное Лицо не является аналитикой");
   Если( !Найти( Лицо.Лицо_.НазваниеРаздела( "Название" ), "ВИДЫ ДОХОДОВ/РАСХОДОВ" ) )
      Ошибка( "Указана аналитика '" + Лицо.Название + "' не из группы ВИДЫ ДОХОДОВ/РАСХОДОВ"
            + "\nИспользуйте аналитики только из указанного раздела!" );
}

Функция НалПроводка( ВидРасх, Лицо, НСумма, ... )
# НалПроводка( ВидРасх, Лицо, НСумма, [КоррСч, [ДатаП] ] )
# Формирует проводку по налоговым затратам
# Возвращает сумму налоговой прводки
# Вызывается из первичных документов
# Параметры: ВидРасх (строка) вид налоговых расходов (НЕПР|ПРВО|УСЛГ|РАСП|ВМЕН)
#            Лицо (объект) аналитика для затрат
#            НСумма (число) сумма затрат
#            КоррСч (строка) корреспондирующий счет кредита (""|"Н02"|"Н05")
#            ДатаП дата проводки
{
   Перем КоррСч = Есть( Параметры.1 ) ? Параметры.1 : "";
   Перем ДатаП  = Есть( Параметры.2 ) ? Параметры.2 : Дата;
   Перем СчНалЗат = "";
   ПроверитьАналитику( Лицо );
   Если( !Флаг( Лицо.Лицо_.Признаки, "Не учитывается" ) )
   {
      Если( !Есть( Лицо.ТИП_РАСХОДА ) ) Ошибка( "У аналитики " + Лицо.Название + " отсутствует параметр:\nТип налоговых расходов (ТИП_РАСХОДА)" );
      ВыборПо( ВидРасх )
      {
         Выбор "НЕПР", "ПРВО", "УСЛГ":
            ВыборПо( Лицо.ТИП_РАСХОДА )
            {
               Выбор "Прямые":            СчНалЗат = "Н20-" + ВидРасх;
               Выбор "Косвенные":         СчНалЗат = "Н20-НЕПР";
               Выбор "Стоим.реал.имущ.":  СчНалЗат = "Н20-НЕПР";
               Выбор "Внереализационные": СчНалЗат = "Н91-2";
               Выбор "На реализацию ЦБ":  СчНалЗат = "НЦБ91-2";
               Иначе Ошибка( "У аналитики " + Лицо.Название + " не заполнен параметр:\nТип налоговых расходов (ТИП_РАСХОДА)" );
            }
         Выбор "РАСП":                    СчНалЗат = "Н26";
         Выбор "ВМЕН":                    СчНалЗат = "";
      }
      Если( СчНалЗат )
      {
         Перем пПлан = УстановитьПланСчетов( "НАЛОГОВЫЙ" );
         Проводка( ДатаП, СчНалЗат, Лицо, НСумма, КоррСч );
         УстановитьПланСчетов( пПлан );
         Вернуть НСумма;
      }
   }
   Вернуть 0;
}

Функция ВидРасходаПоШПЗ( НомерСчета )
# Возвращает вид расхода для налогового учета соответствующий бухгалтерскому счету
# НомерСчета - номер бухгалтерского счета
# возвращаемые значения НЕПР, ПРВО, УСЛГ, ВМЕН, РАСП
# Анализирует соответствующие константы
{
   Объект мВиды, мСЧ;
   мВиды.1 = "НЕПР";
   мВиды.2 = "ПРВО";
   мВиды.3 = "УСЛГ";
   мВиды.4 = "ВМЕН";
   мВиды.5 = "РАСП";
   Перем пВид, П;
   ДляВсех( Элементов( мВиды, пВ ) )
   {
      Перем пВид = мВиды[пВ];
      Очистить( мСЧ );
      Разбить( Константа( Дата, "СЧ_" + пВид), ",", мСЧ );
      ДляВсех( Элементов( мСЧ, П ) )
      {
         Перем пСчет = мСЧ[П];
         Если( НомерСчета == пСчет ) 
            Вернуть пВид;
         Иначе Если( Подстрока( НомерСчета, 1, Размер( пСчет ) ) == пСчет )      # НомерСчета начинается с пСч
                  Если( Подстрока( НомерСчета, Размер( пСчет ) + 1, 1 ) == "-" ) # НомерСчета является субсчетом пСч
                     Вернуть пВид;
      }
   }

#   Если( НомерСчета )
#      Сообщить( "Не определен вид налогового расхода для счета '" + НомерСчета + "'"
#              + "\nУкажите этот счет в одной из констант: СЧ_НЕПР,СЧ_ПРВО,СЧ_УСЛГ,СЧ_РАСП,СЧ_ВМЕН" );
   Вернуть "";
}

Функция ВремРазница( Разница, ВидРасхода, оАналит, оОбъект, ... )
# ВременнаяРазница( Разница, ВидРасхода, оАналит, оОбъект [, ДатаП [, УменьшУвелич ] ] )
# Формирует проводку по отражению налоговых разниц, где
# $Сумма - сумма временной разницы
# Сумма  - сумма отложенного налога (Сумма = $Сумма * 24% )
# Возвращает сумму отложенного налога (24%)
# Параметры: Разница - бухгалтерские расходы минус налоговые
#            ВидРасхода - вид налогового расхода (НЕПР|ПРВО|УСЛГ|ВМЕН|РАСП)
#            оАналит - статья доходов/расходов
#            оОбъект - объект по которому возникла разница (например ОС)
#            ДатаП - дата проводки
#            УменьшУвелич - может быть "уменьш" или "увелич", определяет увеличение или
#               уменьшение временной разницы. Если этот параметр не указан, то
#               анализируется сальдо по 09 и 77 счету по указанным аналитикам для
#               определения уменьшения или увеличения.
{
   Перем ДатаП = Есть( Параметры.1 ) ? Параметры.1 : Дата;
   Если( ВидРасхода != "ВМЕН" )
   {
      Перем СубСч = ( ВидРасхода == "РАСП" ) ? 2 : 1;
      Перем Налог = НалогСвх(  Разница, Константа( ДатаП, "ПРИБ_СТАВКА" ) );
      Если( Налог )
      {
         Перем пПлан = УстановитьПланСчетов("");
         Перем ЭтоУменьшение = 0;
         Если( Есть( Параметры.2 ) )
         {
            ВыборПо( Вверх( Параметры.2 ) )
            {
               Выбор "УМЕНЬШ" : ЭтоУменьшение = 1;
               Выбор "УВЕЛИЧ" : ЭтоУменьшение = 0;
               Иначе Ошибка( "Недопустимое значение параметра 'УменьшУвелич' при вызове функции ВременнаяРазница!" );
            }
         }
         Иначе
         {
            Если( Разница > 0 )
            {
               Если( СКК( "77-1", оАналит, оОбъект, Нет, "---2", ДатаП ) > 0 ) ЭтоУменьшение = 1;
            }
            Иначе
            {
               Если( СКД( "09-1", оАналит, оОбъект, Нет, "---2", ДатаП ) > 0 ) ЭтоУменьшение = 1;
            }
         }
         Если( !ЭтоУменьшение )
         {
            Если( Разница > 0 )
               Проводка( ДатаП, "09-" + СубСч, оАналит, оОбъект, 68РАСЧПРИБ, Налог, Разница );
            Иначе
               Проводка( ДатаП, 68РАСЧПРИБ, "77-" + СубСч, оАналит, оОбъект, -Налог, -Разница );
         }
         Иначе
         {
            Если( Разница > 0 )
               Проводка( ДатаП, "77-" + СубСч, оАналит, оОбъект, 68РАСЧПРИБ, Налог, Разница );
            Иначе
               Проводка( ДатаП, 68РАСЧПРИБ, "09-" + СубСч, оАналит, оОбъект, -Налог, -Разница );
         }
         УстановитьПланСчетов( пПлан );
      }
      Вернуть Налог;
   }
   Вернуть 0;
}

Функция ПостРазница( Разница, ВидРасхода, оАналит, ... )
# ПостРазница( Разница, ВидРасхода, оАналит [, оОбъект [, ДатаП ] ] )
# Формирует проводку по отражению налоговых разниц, где
# $Сумма - сумма постоянной разницы
# Сумма  - сумма отложенного налога (Сумма = $Сумма * 24% )
# Возвращает сумму отложенного налога (24%)
# Параметры: Разница - бухгалтерские расходы минус налоговые
#            ВидРасхода - вид налогового расхода (НЕПР|ПРВО|УСЛГ|ВМЕН|РАСП)
#            оАналит - статья доходов/расходов
#            оОбъект - объект по которому возникла разница (например ОС)
#            ДатаП - дата проводки
{
   Объект оОбъект = Есть( Параметры.1 ) ? Параметры.1 : Нет;
   Перем  ДатаП   = Есть( Параметры.2 ) ? Параметры.2 : Дата;
   Если( ВидРасхода != "ВМЕН" )
   {
      Перем СубСч = ( ВидРасхода == "РАСП" ) ? 2 : 1;
      Перем Налог = НалогСвх( Разница, Константа( ДатаП, "ПРИБ_СТАВКА" ) );
      Если( Налог )
      {
         Перем пПлан = УстановитьПланСчетов("");
         Если( Разница > 0 )
            # Положит. постоянное налоговое обязательство
            Проводка( ДатаП, "99-ППНО-" + СубСч, оАналит, оОбъект, 68РАСЧПРИБ, Налог, Разница );
         Иначе
            # Отрицат. постоянное налоговое обязательство
            Проводка( ДатаП, 68РАСЧПРИБ, "99-ОПНО-" + СубСч, оАналит, оОбъект, -Налог, -Разница );
         УстановитьПланСчетов( пПлан );
      }
      Вернуть Налог;
   }
   Вернуть 0;
}

Функция НалЗатратыПоЛицу( Аналитика )
# Возвращает сумму налоговых затрат за установленный период
# по указанной аналитике
{
    ВывестиСтатус("Расчет оборотов по '" + Лицо.Название + "'");
    Перем пПлан = УстановитьПланСчетов("НАЛОГОВЫЙ");
    Перем Сумма = ОД( "Н20", Лицо ) + ОД( "Н91-2", Лицо ) + ОД( "НЦБ91-2", Лицо );
    УстановитьПланСчетов(пПлан);
    Вернуть Сумма;
}

Функция БухЗатратыПоЛицу( Аналитика )
# Возвращает сумму бухгалтерских затрат за установленный период
# по указанной аналитике
# Номера счетов берутся из констант СЧ_НЕПР, СЧ_ПРВО, СЧ_УСЛГ
{
   Перем пПлан = УстановитьПланСчетов("НОВЫЙ");
   Перем Сумма = 0;
   Если( !Есть( Аналитика.ТИП_РАСХОДА ) ) 
      Ошибка( "У аналитики '" + Лицо.Название + "' отсутствует параметр:"
            + "\nТип налоговых расходов (ТИП_РАСХОДА)" );
   # Аналитики из группы ДОХОДЫ ОТ РЕАЛИЗАЦИИ
   # означают стоимость реализованных товаров(работ, услуг)
   # эти затраты определяем оборотами Д90-2 К41,10,43 и Д91-2 К01,04
   # Они используются также для доходов, поэтому у них параметр СЧ_НАЛДОХ == "Н90-1",
   # по нему мы и определем по каким счетам считать затраты
   ВывестиСтатус("Расчет оборотов по '" + Лицо.Название + "'");
   Если( Аналитика.ТИП_РАСХОДА == "Стоим.реал.имущ." )
   {
      Сумма = Оборот( "90-2", Аналитика, "41" )
            + Оборот( "90-2", Аналитика, "43" )
            + Оборот( "91-2", Аналитика, "10" )
            + Оборот( "91-2", Аналитика, "01" )
            + Оборот( "91-2", Аналитика, "04" );
   }
   Иначе Если( Аналитика.ТИП_РАСХОДА == "На реализацию ЦБ" )
   {
      Сумма = ОД( "91-2", Аналитика );
   }
   Иначе # Перебираем счета 20,44,26, перечисленные в константах
   {
      Перем Нпп;
      Объект мСЧЕТА, мСЧЕТА1;
      # Собираем массив мСЧЕТА из всех счетов НЕПР ПРВО УСЛГ
      Очистить( мСЧЕТА1 );
      Разбить( СЧ_НЕПР, ",", мСЧЕТА1 );
      ДляВсех( Элементов( мСЧЕТА1, Нпп ) )
         мСЧЕТА[ мСЧЕТА1[ Нпп ] ] = мСЧЕТА1[ Нпп ];
      
      Очистить( мСЧЕТА1 );
      Разбить( СЧ_ПРВО, ",", мСЧЕТА1 );
      ДляВсех( Элементов( мСЧЕТА1, Нпп ) )
         мСЧЕТА[ мСЧЕТА1[ Нпп ] ] = мСЧЕТА1[ Нпп ];
      
      Очистить( мСЧЕТА1 );
      Разбить( СЧ_УСЛГ, ",", мСЧЕТА1 );
      ДляВсех( Элементов( мСЧЕТА1, Нпп ) )
         мСЧЕТА[ мСЧЕТА1[ Нпп ] ] = мСЧЕТА1[ Нпп ];
      
      ДляВсех( Элементов( мСЧЕТА, Нпп ) )
         Если( мСЧЕТА[ Нпп ] )
         {
            Перем пОД = ОД( мСЧЕТА[ Нпп ], Аналитика );
            Перем пОК = ОК( мСЧЕТА[ Нпп ], Аналитика );
            Если( пОК )
               пОК -= Оборот( "90", мСЧЕТА[ Нпп ], Аналитика );
            Сумма += пОД - пОК; # Весь приход минус переброска между счетами Д44 К26
         }
   }
   УстановитьПланСчетов(пПлан);
   Вернуть Сумма;
}
