Функция _Свод()
{
   ### 
   Если( Флаг( Документ.Состояние, "Закрыт" ) )
      Ошибка( "Неверное правило операции !" )
   ###
   Если( !ДаНет( "Рассчитать свод продаж ?" ) ) Вернуть 0;
   ДляВсех( Наименований )
   {
      Сообщить( "В накладной уже есть наименования\n!" +
                "Свод формироваться не будет !" );
      Вернуть 0;
   }
   #   {
   .пОбщСумЦен = 0;
   #   #   ТВ1 = ТекВремя;
   #   # индексированный поиск по таблице Расход
   НужнаДата = Документ.Дата;
   оРасход = Объект( "Расход" );
   оРасход.дата = НужнаДата - 1;
   Пока( Найти( оРасход, "Дата" ) )
   {
      Если( оРасход.дата > ( НужнаДата ) )
         Прервать();
      Если( Найти( оРасход.Признаки, "р" ) )
      Если(Найти(Вверх('ОРАСХОД.Накладная-Расход>Документ_>Папки.Примечание'),"ПРОДАЖА")
      или Найти(Вверх('ОРАСХОД.Накладная-Расход>Документ_>Папки.Примечание'),"КАССА"))
#      Если( 'ОРАСХОД.Накладная-Расход>Документ_>Папки.Примечание' == "КАССА" )
      {
         оРасход.Признаки = "-1";
         Сохранить(оРасход);
      }
      Если( !Найти( оРасход.Признаки, "р" ) )
      {
      Если(Найти('ОРАСХОД.Накладная-Расход>Документ_.Состояние',"п")==0)
      {
       ппНномер="";
       ппНномер='ОРАСХОД.Накладная-Расход>Документ_.Номер';
       Сообщить("Есть не закрытый чек №"+ппНномер);
      }
      Если(Найти(Вверх('ОРАСХОД.Накладная-Расход>Документ_>Папки.Примечание'),"ПРОДАЖА")
      или Найти(Вверх('ОРАСХОД.Накладная-Расход>Документ_>Папки.Примечание'),"КАССА"))
#      Если( 'ОРАСХОД.Накладная-Расход>Документ_>Папки.Примечание' == "КАССА" )
   ##            'ОРАСХОД.Накладная-Расход>Документ_.Группа нумерации' == 13 )
            {
               Разбить(оРасход.Продавец,"|",пПрод);
               Если(!пПрод) 
                 { 
                  пПрод="НЕТ"; 
                  оРасход.Продавец="НЕТ"; 
                 }
               НомНомер = 'ОРАСХОД.Склад-Расход>Номенклатура-Склад.НомНомер';
#               НомНомер += "_"+пПрод;
               .мПродК[НомНомер] += оРасход.Кол_во;
               .мПродС[НомНомер] += оРасход.СуммаЦен;
               .мПродНН[НомНомер] = НомНомер;
               .мПродПР[НомНомер] = оРасход.Продавец;
               .пОбщСумЦен += оРасход.СуммаЦен; 
            }
      }
   }
   ####
   ##   ТВ2 = ТекВремя;
   ##   ТВ3 = ТВ2 - ТВ1;
   ##   Сообщить( Текст( ТВ1, "ВРЕМЯ (чч:мм:сс)") + "\n" +
   ##             Текст( ТВ2, "ВРЕМЯ (чч:мм:сс)") + "\n" +
   ##             Текст( ТВ3, "ВРЕМЯ (чч:мм:сс)") )
   #Отладить();
   Если( !пОбщСумЦен )
   {
      Сообщить( "СВОД ФОРМИРОВАТЬСЯ НЕ БУДЕТ !\nСумма продаж - 0.00" );
      Вернуть 0;
   }
   Если( !ДаНет( "Сформировать свод продаж\nза " + Дата + " на " + 
                 Деньги( пОбщСумЦен ) + " ?" ) )
      Вернуть 0;
   #     {
   ВывестиСтатус( "Формируется свод продаж", 1 );
#   Отладить();
   ##   ТВ1 = ТекВремя;
   ## Запоминаем наибольший номер пп в накладной для установки правильного Нпп в добавляемой строке.
           НПП = 0;
   #        ДляВсех( Наименований )
   #           НПП = 'N п/п';
   ## Создаем объект наименования, которое будем добавлять.
   ## Устанавливаем связь будущего наименования с текущей накладной.
   ## Ищем нужное наименование на складе, по которому оформлена накладная.
   #        Если( НПП ) Ошибка( "В накладной уже есть наименования !" )
           пКолЭм=Размер(мПродК);
           оНаим = Объект( "Расход" );
#           Отладить();
           ДляВсех( Элементов( мПродК, эм ) )
#           Если( мПродК[эм] != 0 ИЛИ эм == "КОПЕЙКИ" )
#           Если( мПродС[эм] != 0 ИЛИ эм == "КОПЕЙКИ" )
           {
#              пДобНН = мПродНН[пНН];
              Разбить(мПродНН[эм],"_",пДобНН);
#              Разбить(пДобэм,"_",пНН,пПр);
              Очистить(оНаим);
              ВывестиСтатус(""+НПП+"/"+пКолЭм,1);
              Связать( 'оНаим.Накладная-Расход', Документ );
              оКарточкаНоменклатуры = Лицо( пДобНН, "Номенклатура" );
              оКарточкаСклада = Объект( "Складская картотека" );
              'оКарточкаСклада.N склада' = 'Документ.Склад.N склада';
              Связать( 'оКарточкаСклада.Номенклатура-Склад', оКарточкаНоменклатуры );
              Если( Найти( оКарточкаСклада, "Номенклатура-Склад") <= 0 )
                 Ошибка( "Не найдена карточка на складе" );
   # Устанавливаем связь будущего наименования с нужной карточкой склада.
              Связать( 'оНаим.Склад-Расход', оКарточкаСклада );
              оНаим.Кол_во   = мПродК[эм];
              оНаим.СуммаЦен = мПродС[эм];
#              оНаим.Продавец = мПродПР[эм];
              'оНаим.N п/п'  = НПП;    
              НПП ++;
   # Добавляем в накладную
              Добавить( оНаим );
            }
   ##   ТВ2 = ТекВремя;
   ##   ТВ3 = ТВ2 - ТВ1;
   ##   Сообщить( Текст( ТВ1, "ВРЕМЯ (чч:мм:сс)") + "\n" +
   ##             Текст( ТВ2, "ВРЕМЯ (чч:мм:сс)") + "\n" +
   ##             Текст( ТВ3, "ВРЕМЯ (чч:мм:сс)") )
   #      }
   #   }
   #   Вернуть 1;
   #}
   # указываем Лицо1 = Частное лицо
   Документ.Связать( Лицо1, Лицо( "XЧЛ", "Частные лица" ) ); # 
   #   # правило = свод продаж
   Прав = Объект("Правила операций");
   Прав.Имя = "РТ_СВОД";    # имя требуемого правила
   Если( Найти( Прав, "Имя" ) И Прав.Имя == "РТ_СВОД" )
   Документ.Связать( "Правила-Документы", Прав );
   Документ.Тема="СВОД";
   Сохранить( Документ );
   Вернуть 1;
}
