# Функции для учета кадров, а также для заработной платы

Функция Инвалид( ... )
# Определяет, является ли сотрудник инвалидом на заданную дату
#  и возвращает код вида инвалидности
# Инвалид( [ДатаИнвалидности [, Сотрудник]] )
# ДатаИнвалидности - дата, на которую определяется инвалидность
# Сотрудник        - лицо, по которому определяется инвалидность
{
   перем ДатНач, ДатКнц;
   пДата     = Есть(Параметры[1]) ? Параметры[1] : .ДатКнц;
   Сотрудник = Есть(Параметры[2]) ? Параметры[2] : Лицо;
   ЗаМесяц(пДата);
   # ПРИКАЗ от 5 июля 2002 г. N БГ-3-05/344
   # ОБ УТВЕРЖДЕНИИ МЕТОДИЧЕСКИХ РЕКОМЕНДАЦИЙ ПО ПОРЯДКУ ИСЧИСЛЕНИЯ И УПЛАТЫ ЕСН
   # В случае если работник получает инвалидность в течение месяца, то налоговая 
   # льгота применяется начиная с 1 числа того месяца, в котором получена инвалидность. 
   # Когда работник теряет право на получение инвалидности в течение месяца, то с 
   # 1 числа этого же месяца налогоплательщик не имеет права на использование 
   # налоговой льготы.
   пДатКнцТМ = ДатКнц;
   пДатНачСМ = ДатКнц + 1; 
   пИнвалид1 = 0; # инвалид на пДатКнцТМ
   пИнвалид2 = 0; # инвалид на пДатНачСМ
   ВидИнв = ""; 
   ДляВсех( Записей( "Инвалидности", Сотрудник ))
   {
      Если( 'Запись.Дата начала' <= пДатКнцТМ  и
            ( 'Запись.Дата окончания' == 00.00.00 или 'Запись.Дата окончания' >= пДатКнцТМ ))
      {
          # инвалид на последний день текущего месяца
          пИнвалид1 = 1;
          ВидИнв = 'ЗАПИСЬ.Инвалидность';
      }
      Если( 'Запись.Дата начала' <= пДатНачСМ  и
            ( 'Запись.Дата окончания' == 00.00.00 или 'Запись.Дата окончания' >= пДатНачСМ ))
      {
          # инвалид на первый день следующего месяца
          пИнвалид2 = 1;
      }
   }
   Если( пИнвалид1 и пИнвалид2 )
      ВыборПо( ВидИнв )
      {  
         Выбор "":                    Вернуть 0;
         Выбор "Инвалид ВОВ":         Вернуть 1;
         Выбор "Инвалид других войн": Вернуть 2;
         Выбор "Инвалид труда":       Вернуть 3;
         Выбор "Инвалид от рождения": Вернуть 4;
         Выбор "Глухонемой":          Вернуть 5;
         Выбор "Прочий инвалид":      Вернуть 6;
      }
   
   Вернуть 0;
}

Функция ВидИнвалидности( Код )
# Возвращает текстовый вариант вида инвалидности по коду
{
   ВыборПо(Код)
   {
      Выбор 1: Вернуть "Инвалид ВОВ";
      Выбор 2: Вернуть "Инвалид других войн";
      Выбор 3: Вернуть "Инвалид труда";
      Выбор 4: Вернуть "Инвалид от рождения";
      Выбор 5: Вернуть "Глухонемой";
      Выбор 6: Вернуть "Прочий инвалид";
   }
   Вернуть "";
}

Функция СтепеньИнвалидности( Код )
# Возвращает текстовое предстваление степени инвалидности по коду
{
   ВыборПо(Код)
   {
      Выбор 1: Вернуть "I степень";
      Выбор 2: Вернуть "II степень";
      Выбор 3: Вернуть "III степень";
   }
   Вернуть "";
}

Функция ВозрастСотр(ДатаРождения, ТекущаяДата)
# Определяет возраст сотрудника на заданную дату
{
   Перем Возраст;
   Если( ДатаРождения > ТекущаяДата )
      Вернуть(0);
   Возраст = Год(ТекущаяДата) - Год(ДатаРождения);
   Если( Возраст > 0 и Месяц(ТекущаяДата) < Месяц(ДатаРождения) )
      Возраст--;
   Вернуть Возраст;
}

Функция ВозрастСотр(ДатаРождения)
# Определяет возраст сотрудника на текущую дату
{
   Вернуть ВозрастСотр(ДатаРождения, ТекДат);
}

Функция СтажСотр( ДатаНачала, ТекущаяДата, Месяц )
# Рассчитывает стаж с указанной даты начала на текущую дату
# в месяцах или года, в зависимости от параметра месяц.
{
   Перем СтажГод, СтажМес;
   Если( ДатаНачала > ТекущаяДата )
   {
      СтажГод = 0;
      СтажМес = 0;
      Вернуть(0);
   }
   СтажГод = Год(ТекущаяДата)   - Год(ДатаНачала);
   СтажМес = Месяц(ТекущаяДата) - Месяц(ДатаНачала);
   Если( СтажГод>0 и СтажМес<0 )
   {
      СтажГод--;
      СтажМес += 12;
   }
   Если( День(ТекущаяДата) < День(ДатаНачала) )
      СтажМес--;
   Если( СтажГод>0 и СтажМес<0 )
   {
      СтажГод--;
      СтажМес += 12;
   }
   Если(Месяц)
      Вернуть(СтажМес);
   Иначе
      Вернуть(СтажГод);
}

Функция СтажСотрГод(ДатаНачала, ТекущаяДата)
# Рассчитывает стаж в годах с указанной даты начала на указанную текущую дату
{
   Вернуть СтажСотр(ДатаНачала, ТекущаяДата, 0);
} 

Функция СтажСотрМесяц(ДатаНачала, ТекущаяДата)
# Рассчитывает стаж в месяцах с указанной даты начала на указанную текущую дату
{
   Вернуть СтажСотр(ДатаНачала, ТекущаяДата, 1);
}

Функция ГруппаПоКатегории(Код)
# Определяет название категорию к которой принадлежит сотрудник, по коду категории.
# Группы сотрудников задаются в справочнике констант
{
   ПроверитьКонстанту("КАТРАБ",  "Коды категорий рабочих",       "01,02", "ОТЧЕТЫ.КАТГРУП");
   ПроверитьКонстанту("КАТСПЕЦ", "Коды категорий специалистов",  "03",    "ОТЧЕТЫ.КАТГРУП");
   ПроверитьКонстанту("КАТСЛУЖ", "Коды категорий служащих",      "04",    "ОТЧЕТЫ.КАТГРУП");
   ПроверитьКонстанту("КАТРУК",  "Коды категорий руководителей", "05,06", "ОТЧЕТЫ.КАТГРУП");
   ПроверитьКонстанту("КАТУЧ",   "Коды категорий учащихся",      "10",    "ОТЧЕТЫ.КАТГРУП");
   Если( Найти(КАТРАБ, Код) )
      Вернуть "Рабочие";
   Иначе Если( Найти(КАТСПЕЦ, Код) )
      Вернуть "Специалисты";
   Иначе Если( Найти(КАТСЛУЖ, Код) )
      Вернуть "Служащие";
   Иначе Если( Найти(КАТРУК, Код) )
      Вернуть "Руководители";
   Иначе Если( Найти(КАТУЧ, Код) )
      Вернуть "Ученики";
   Вернуть "Прочие";
}  

# Следующие функции следует настроить на категории конкретного предприятия
# они определяют прнадлежность к категории сотрудника по коду категории
Функция ЭтоРабочий(Код)
{
   Вернуть(Код == "01" или Код == "02");
}

Функция ЭтоСпециалист(Код)
{
   Вернуть(Код == "03");
}

Функция ЭтоСлужащий(Код)
{
   Вернуть(Код == "03");
}

Функция ЭтоРуководитель(Код)
{
   Вернуть(Код == "05" или Код == "06");
}

Функция ЭтоУченик(Код)
{
   Вернуть(Код == "10");
}

Функция ЭтоОператорАЗС(Код)
{
   Вернуть(Код == "04");
}
