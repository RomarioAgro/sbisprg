# Функции для перехода на новый план счетов

Функция ПереносСальдо( СтарыйСчет, НовыйСчет , ... )
# Заносит остатки по счету нового плана счетов и
# закрывает старый счет сторнировочными проводками
# ПереносСальдо( СтарыйСчет, НовыйСчет [,ПорядокПеребора [,ТипСальдо] ] )
#    СтарыйСчет - номер счета из старого плана счетов
#    НовыйСчет  - номер соответствующего счета из нового плана счетов
#    ПорядокПеребора - порядок перебора аналитик, варианты значений:
#       1  - переносится сальдо по первой аналитике,
#       12 - переносится сальдо по первой и второй аналитике.
#       123 - переносится сальдо по первой, второй и третьей аналитике.
#       Если параметр не указан, то это равносильно "1"
#    ТипСальдо - неуказан или 
#                ""   - руб. дебетовое и кредитовое
#                "В"  - руб. и вал. дебетовое и кредитовое
#                "Д"  - руб. дебетовое только
#                "К"  - руб. кредитовое только
#                "ВД" - руб. и вал. дебетовое только
#                "ВК" - руб. и вал. кредитовое только
# На занесение сальдо влияют признаки счета Активный, Пассивный из старого плана счетов
# В комментарии к проводке указывается счет с которого или на который было перенесено сальдо
{
   Перем пПорядокПеребора, пСКД, пСКК, пТипСальдо, пВалСальдо, пДебСальдо, пКредСальдо;
   пПорядокПеребора  = Есть( ПАРАМЕТРЫ.1 ) ? Число( ПАРАМЕТРЫ.1 ) : 1;
   пТипСальдо        = Есть( ПАРАМЕТРЫ.2 ) ? ПАРАМЕТРЫ.2 : "";
   пВалСальдо        = Найти( пТипСальдо, "В" );
   пДебСальдо        = Найти( пТипСальдо, "Д" );
   пКредСальдо       = Найти( пТипСальдо, "К" );
   Если( !пДебСальдо и !пКредСальдо ) пДебСальдо = пКредСальдо = 1;

   УстановитьПланСчетов( "СТАРЫЙ" );
   Если( пПорядокПеребора == 1 или пПорядокПеребора == 12 ) 
      ДляВсех( Лиц( СтарыйСчет, пПорядокПеребора ) )
      {
         # Занесения остатка в новый план счетов
         Если( пВалСальдо )
         {
            УстановитьПланСчетов( "СТАРЫЙ" );
            пВСКД = ВСКД( СтарыйСчет, Лицо1, Лицо2, Нет );
            пВСКК = ВСКК( СтарыйСчет, Лицо1, Лицо2, Нет );
         }
         Иначе
            пВСКД = пВСКК = 0;
         УстановитьПланСчетов( "НОВЫЙ" );
         Если( СКД и пДебСальдо )
         {
            Если( СКД < 0 и !пКредСальдо )
               Ошибка( "На " + СтарыйСчет + " счете по лицу '" + Лицо.Название
                       + "' отрицательное деб. сальдо = " + СКД
                       + ",\nсделайте старый счет активно-пассивным!" );
            Проводка( 31.12.01, НовыйСчет, Лицо1, Лицо2, Нет, СКД, пВСКД,
                                "К",       Нет,   Нет,   Нет, СтарыйСчет );
         }
         Если( СКК и пКредСальдо )
         {
            Если( СКК < 0 и !пДебСальдо )
               Ошибка( "На " + СтарыйСчет + " счете по лицу '" + Лицо.Название
                       + "' отрицательное кред. сальдо = " + СКК
                       + ",\nсделайте старый счет активно-пассивным!" );
            Проводка( 31.12.01, "Д",       Нет,   Нет,   Нет, СКК, пВСКК,
                                НовыйСчет, Лицо1, Лицо2, Нет, СтарыйСчет );
         }
         # Закрытие старого счета
         УстановитьПланСчетов( "СТАРЫЙ" );
         Если( СКД и пДебСальдо )
            Проводка( 01.01.02, СтарыйСчет, Лицо1, Лицо2, Нет, -СКД, -пВСКД,
                                "К",        Нет,   Нет,   Нет, НовыйСчет  );
         Если( СКК и пКредСальдо )
            Проводка( 01.01.02, "Д",        Нет,   Нет,   Нет, -СКК, -пВСКК,
                                СтарыйСчет, Лицо1, Лицо2, Нет, НовыйСчет  );

      }
   Иначе Если( пПорядокПеребора == 123 )
      ДляВсех( Лиц( СтарыйСчет, 12 ) )
      {
         Объект оЛицо1 = Лицо1;
         УстановитьПланСчетов( "СТАРЫЙ" );
         ДляВсех( Лиц( СтарыйСчет, Лицо2, 23 ) )
         {
            УстановитьПланСчетов( "СТАРЫЙ" );
            пСКД = СКД( СтарыйСчет, оЛицо1, Лицо1, Лицо2 );
            пСКК = СКК( СтарыйСчет, оЛицо1, Лицо1, Лицо2 );
            Если( пВалСальдо )
            {
               пВСКД = ВСКД( СтарыйСчет, оЛицо1, Лицо1, Лицо2 );
               пВСКК = ВСКК( СтарыйСчет, оЛицо1, Лицо1, Лицо2 );
            }
            Иначе
               пВСКД = пВСКК = 0;
            # Занесения остатка в новый план счетов
            УстановитьПланСчетов( "НОВЫЙ" );
            Если( пСКД и пДебСальдо )
            {
               Если( пСКД < 0 и !пКредСальдо )
               Ошибка( "На " + СтарыйСчет + " счете по лицу '" + Лицо.Название 
                       + "' отрицательное деб. сальдо = " + пСКД
                       + ",\nсделайте старый счет активно-пассивным!" );
               Проводка( 31.12.01, НовыйСчет, оЛицо1, Лицо1, Лицо2, пСКД, пВСКД,
                                   "К",       Нет,    Нет,   Нет  , СтарыйСчет );
            }
            Если( пСКК и пКредСальдо )
            {
               Если( пСКК < 0 и !пДебСальдо )
                  Ошибка( "На " + СтарыйСчет + " счете по лицу '" + Лицо.Название 
                          + "' отрицательное кред. сальдо = " + пСКК
                          + ",\nсделайте старый счет активно-пассивным!" );
               Проводка( 31.12.01, "Д",       Нет,    Нет,   Нет,   пСКК, пВСКК,
                                   НовыйСчет, оЛицо1, Лицо1, Лицо2, СтарыйСчет );
            }
            # Закрытие старого счета
            УстановитьПланСчетов( "СТАРЫЙ" );
            Если( пСКД и пДебСальдо )
               Проводка( 01.01.02, СтарыйСчет, оЛицо1, Лицо1, Лицо2, -пСКД, -пВСКД,
                                   "К",        Нет,    Нет,   Нет  , НовыйСчет );
            Если( пСКК и пКредСальдо )
               Проводка( 01.01.02, "Д",        Нет,    Нет,   Нет,   -пСКК, -пВСКК,
                                   СтарыйСчет, оЛицо1, Лицо1, Лицо2, НовыйСчет );
         }
      }
      Иначе Ошибка("Неверное значение параметра при вызове функции ПереносСальдо!");
      # Провести для правильного заполнения Комментария проводки
      # На случай если на один счет переносится сальдо с разных счетов,
      # например: К60-1 К60-1 и К61 К60-1
   Провести();
}

Функция ПереносСальдо64( ... )
# Заносит остатки по счетам 62-2 и 76-АВ нового плана счетов,
# со старого счета 64 авансы от покупателей или 62-1
# Используется если счет 64 не имел субсчетов 64-1 "Расчеты по авансам" и 64-2 "Расчеты по НДС с авансов"
# Переносится только кредитовое сальдо, если же есть дебетовое сальдо,
# то его нужно дополнительно перенести так: ПереносСальдо( "64", "62-1", 1, "Д" );
# ПереносСальдо64( [пСтСчет64] )
#    пСтСчет64 - номер счета авансов от покупателей из старого плана счетов,
#                может быть "64", "62-1", если не указан, то берется "64"
# В комментарии к проводке указывается счет с которого или на который было перенесено сальдо
{
   ПроверитьКонстанту( "62АВАНС",    "Расчеты по авансам полученным",  "62-2",  "СЧЕТА.62", "КОДОВЫЕ НАЗВАНИЯ СЧЕТОВ.(62) РАСЧЕТЫ С ПОКУПАТЕЛЯМИ И ЗАКАЗЧИКАМИ");
   ПроверитьКонстанту( "76АВАНСНДС", "Расчеты по НДС с авансов",       "76-АВ", "СЧЕТА.76", "КОДОВЫЕ НАЗВАНИЯ СЧЕТОВ.(76) РАСЧЕТЫ С ДЕБИТОРАМИ И КРЕДИТОРАМИ" );
   
   Перем пСумма64, пСуммаНДС, пСуммаАванса, пСтСчет64;
   пСтСчет64 = Есть( ПАРАМЕТРЫ.1 ) ? Текст( ПАРАМЕТРЫ.1 ) : "64";
   УстановитьПланСчетов( "СТАРЫЙ" );
   ДляВсех( Лиц( пСтСчет64 ) )
   {
      пСумма64 = СКК;
      Если( пСумма64 < 0 )
         Ошибка( "На " + пСтСчет64 + " счете по лицу '" + Лицо.Название 
                 + "' отрицательное кред. сальдо = " + пСумма64 
                 + ",\nсделайте старый счет активно-пассивным!" );
      Если( пСумма64 )
      {
         пСуммаНДС    = пСумма64 * 16.67 / (100 - 16.67);
         пСуммаАванса = пСумма64 + пСуммаНДС;
         # Занесения остатка в новый план счетов
         УстановитьПланСчетов( "НОВЫЙ" );
         Проводка( 31.12.01, "Д",               Нет,   Нет, Нет, пСуммаАванса,
                             Текст(62АВАНС),    Лицо1, Нет, Нет, пСтСчет64 );
         Проводка( 31.12.01, Текст(76АВАНСНДС), Лицо1, Нет, Нет, пСуммаНДС,
                             "К",               Нет,   Нет, Нет, пСтСчет64 );
         # Закрытие старого счета
         УстановитьПланСчетов( "СТАРЫЙ" );
         Проводка( 01.01.02, "Д",        Нет,   Нет, Нет, -пСуммаАванса,
                             пСтСчет64,  Лицо1, Нет, Нет, Текст( 62АВАНС ) );
         Проводка( 01.01.02, пСтСчет64,  Лицо1, Нет, Нет, -пСуммаНДС,
                             "К",        Нет,   Нет, Нет, Текст( 76АВАНСНДС ) );
      }
   }
   # Провести для правильного заполнения Комментария проводки
   # На случай если на один счет переносится сальдо с разных счетов,
   # например: К64 К62-2 и К62-1 К62-2
   Провести();
}
