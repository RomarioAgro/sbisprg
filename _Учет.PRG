Функция _Заполн_Ведом()
{
   ДляВсех(Наименований())                                                           
   {                                                                               
      Ошибка("Ведомость инвентаризации\nперед загрузкой с терминала\nдолжна быть пустой !");                                                                     
      Вернуть(1);                                                                  
   }                                                                               
   пПуть = "C:\\TSD\\";                                                            
   пИмяФайла = "data.txt";                                                         
   оФайл = Объект( пПуть+пИмяФайла );                                              
   пСчСтрок=0;                                                                     
   Пока( Следующий( оФайл ) )                                                      
   {    
      ВывестиСтатус(оФайл.Строка,1);                                                                        
      Разбить( оФайл.Строка, ",",пКод,пКол_во );              
      Если(Число(пКол_во)!=0)                                                      
         {                                                                         
             оНаим = Выборка( "Наименования заказа" );                              
             Связать( 'оНаим.Счет-Наименования', Документ );                        
             фНашли=0;                                                              
             оКод=Выборка("Штрих-коды");                                            
             оКод.Код=пКод;                                                         
             Найти(оКод,"Код");                                                     
             Если(оКод.Код==пКод)                                                   
                {                                                                   
                   оНом='оКод.Номенклатура-Коды';                                   
                   фНашли=1;                                                        
                   оКарточкаНоменклатуры = Лицо( оНом.НомНомер, "Номенклатура" );   
                }                                                                   
             Иначе                                                                  
                {
                   оНом2=Выборка("Номенклатура");                                            
                   оНом2.НомНомер=пКод;                                                         
                   Найти(оНом2,"НомНомер");                                                     
                   Если(оНом2.НомНомер==пКод)                                                   
                      {                                                                   
                         оНом='оНом2';                                   
                         фНашли=1;                                                        
                         оКарточкаНоменклатуры = Лицо( оНом.НомНомер, "Номенклатура" );   
                      }                                                                   
                }
             оКарточкаСклада = Объект( "Складская картотека" );                     
             'оКарточкаСклада.N склада' = НОМЕРСКЛАДА10;                            
             Связать( 'оКарточкаСклада.Номенклатура-Склад', оКарточкаНоменклатуры );                                                                              
             Если( Найти( оКарточкаСклада, "Номенклатура-Склад") <= 0 )             
                {                                                                   
                   оКарточкаСклада = Выборка( "Складская картотека" );              
                   'оКарточкаСклада.N склада' = НОМЕРСКЛАДА10;                      
                   Связать( оКарточкаСклада.Склады, НОМЕРСКЛАДА10 );                
                   Связать( 'оКарточкаСклада.Номенклатура-Склад', оКарточкаНоменклатуры );
                   оКарточкаСклада.Наименование = оКарточкаНоменклатуры.Наименование;                                             
                   Добавить( оКарточкаСклада );                                     
                }                                                                   
             Связать( 'ОНАИМ.Склад-Наименования счета', оКарточкаСклада );          
             Если(!фНашли)                                                          
                оНаим.Комментарий=пКод;                                             
             оНаим.Кол_во   = Число( пКол_во );                                     
             пНПП ++;                                                               
             ВывестиСтатус( "Создание накладной "+пНПП, 1 );                        
             'оНаим.N п/п'  = пНПП;                                                 
             оНаим.СуммаЦен = оНаим.Кол_во*оНаим.Цена3;                             
             Добавить( оНаим );                                                     
        }                                                                          
   }
оФайл=нет;
запустить("cmd /c copy c:\\tsd\\data.txt c:\\tsd\\data\\data_"+Подстрока(ТекВремя,1,2)+Подстрока(ТекВремя,4,2)+Подстрока(ТекВремя,7,2)+".txt",1);
запустить("cmd /c del c:\\tsd\\data.txt",1);                                    
Вернуть(0);
}

Функция _Терм2Диск()
{
Установить(Пользователь);
Если(Найти('ПОЛЬЗОВАТЕЛЬ.имя',"КАССИР")!=0
   или Найти('ПОЛЬЗОВАТЕЛЬ.имя',"ЗАВМАГ")!=0) Ошибка("Не админам запрещено это запускать");
   запустить("cmd /c del c:\\tsd\\data.txt",1);                                    
   запустить("cmd /c MD c:\\tsd\\data",1);                                         
   запустить("c:\\tsd\\IR_Read.exe",1);                                            
   запустить("cmd /c copy c:\\tsd\\data.txt c:\\tsd\\data\\data_"+Подстрока(ТекВремя,1,2)+Подстрока(ТекВремя,4,2)+Подстрока(ТекВремя,7,2)+".txt",1);
   Сообщить("Ок!");
}

Функция _Ведм2Акт()
{
   ДляВсех( Наименований )
   {
      Сообщить( "В накладной уже есть наименования\n!" +
                "Инв формироваться не будет !" );
      Вернуть 0;
   }
   ТВ1 = ТекВремя;
   НужнаДата = Документ.Дата;
   пКолЗаписей=0;
   ДляВсех( Документов( "СчетВход", НужнаДата, НужнаДата ))
      пКолЗаписей++;
######
   ДляВсех( Документов( "СчетВход", НужнаДата, НужнаДата ))
   Если('ДОКУМЕНТ.Папки.Тема'=="ТЕРМИНАЛ")
   {
#   Отладить();
      Открыть(Документ);
      псч++;
      Если(псч%10==0)
      ВывестиСтатус("Снимаются накладные с резерва "+псч+"/"+пКолЗаписей);
      ДляВсех(Наименований)
         Если(Найти(Наим.Признаки,"р"))
         {  Наим.Признаки="-Резерв";Сохранить(Наим);  }
      Закрыть(Документ);
   }
#####
   ТВ2 = ТекВремя;
   Время ТВР;
   ТВР = ТВ2 - ТВ1;
#####
#  Формируем массив продаж
   .пОбщСумЦен = 0;
   ТВ1 = ТекВремя;
   псч=0;
   ДляВсех( Документов( "СчетВход", НужнаДата, НужнаДата ))
   Если('ДОКУМЕНТ.Папки.Тема'=="ТЕРМИНАЛ")
      {
         псч++;
         Если(псч%10==0)
         ВывестиСтатус("Формируется массив продаж "+псч+"/"+пКолЗаписей);
         ДляВсех( Наименований() )
            {
               пНН = НомНомер;
#               Если( НомНомер == НЕНАЙДЕННОМНОМЕР )
#                  пНН+="|"+Комментарий;
               .мПродК[пНН] += Кол_во;
               .мПродС[пНН] += СуммаЦен;
               .мПродНН[пНН] = пНН;
               .пОбщСумЦен += СуммаЦен; 
            }
      }
####
   ТВ2 = ТекВремя;
   Время ТВМ;
   ТВМ = ТВ2 - ТВ1;
   пКолЗаписей=0;
#   отладить();
   ДляВсех(Элементов(мПродК,эм)) пКолЗаписей++;
   Если( !пОбщСумЦен )
   {
      Сообщить( "Инв ФОРМИРОВАТЬСЯ НЕ БУДЕТ !\nСумма продаж - 0.00" );
      Вернуть 0;
   }
   Если( !ДаНет( "Сформировать Инв продаж\nза " + Дата + " на " + 
                 Деньги( пОбщСумЦен ) + "\nКол-во позиций "+пКолЗаписей+" ?" ) )
      Вернуть 0;
   ВывестиСтатус( "Формируется Инв продаж", 1 );
      ТВ1 = ТекВремя;
# Запоминаем наибольший номер пп в накладной для установки правильного Нпп в добавляемой строке.
           НПП = 0;
# Создаем объект наименования, которое будем добавлять.
# Устанавливаем связь будущего наименования с текущей накладной.
# Ищем нужное наименование на складе, по которому оформлена накладная.
#отладить();
           ДляВсех( Элементов( мПродК, эм ) )
           Если( мПродК[эм] != 0 )
           {
              Если(НПП%10==0)
                 ВывестиСтатус("Добавление позиции "+НПП+"/"+пКолЗаписей,1);
              пДобНН = мПродНН[эм];
              оНаим = Выборка( "Расход" );
#              Если(Найти(пДобНН,НЕНАЙДЕННОМНОМЕР))
#              {
#                 Разбить(пДобНН,"|",пСтр1,пСтр2);
#                 оНаим.Комментарий = пСтр2;
#                 пДобНН = НЕНАЙДЕННОМНОМЕР ;
#              }
              Связать( 'оНаим.Накладная-Расход', Документ );
              оКарточкаНоменклатуры = Лицо( пДобНН, "Номенклатура" );
              оКарточкаСклада = Объект( "Складская картотека" );
              'оКарточкаСклада.N склада' = 'Документ.Склад.N склада';
              Связать( 'оКарточкаСклада.Номенклатура-Склад', оКарточкаНоменклатуры );
              Если( Найти( оКарточкаСклада, "Номенклатура-Склад") <= 0 )
                 Ошибка( "Не найдена карточка на складе" );
# Устанавливаем связь будущего наименования с нужной карточкой склада.
              Связать( 'оНаим.Склад-Расход', оКарточкаСклада );
              оНаим.Кол_во   = -(мПродК[эм]);
              оНаим.СуммаЦен = мПродС[эм];
              'оНаим.N п/п'  = НПП;
              НПП ++;
# Добавляем в накладную
              Добавить( оНаим );
            }
      ТВ2 = ТекВремя;
      Время ТВС;
      ТВС = ТВ2 - ТВ1;                           
   Сохранить( Документ );
   Сообщить("Снять с резерва ...... "+ТВР+"\n"+
            "Формирование массива . "+ТВМ+"\n"+
            "Создание свода ....... "+ТВС);
   Вернуть 1;
}

Функция _ОчиститьИнв()
{
   ДляВсех( Наименований ) 
      {
         Наим.Кол_во=0;
         Наим.НачКол=0;
         Наим.Наличие=0;
         Сохранить(Наим);
      }
}

Функция _Ведм2Акт_Сравн()
{
   ДляВсех( Наименований ) 
      {
#         .мПродНН[НомНомер] = НомНомер;
         .мПродК[НомНомер]  = 0;
         Наим.Кол_во=0;
         Наим.НачКол=0;
         Наим.Наличие=0;
         Сохранить(Наим);
      }
#      Отладить();
#######
   НужнаДата = Документ.Дата;
#######
   ДляВсех( Документов( "СчетВход", НужнаДата, НужнаДата ))
      Если('ДОКУМЕНТ.Папки.Тема'=="ТЕРМИНАЛ")
      {
         Открыть(Документ);
         ДляВсех(Наименований)
            {
               Если(Найти(Наим.Признаки,"р"))
                  {  
                     Наим.Признаки="-Резерв";
                     Сохранить(Наим);  
                  }
#               .мПродНН[НомНомер] = НомНомер;
               .мПродК[НомНомер]  += Кол_во;
            }
         Закрыть(Документ);
      }
######
#   ДляВсех( Элементов( мПродНН, эм ) )
#      ДляВсех( Документов( "СчетВход", НужнаДата, НужнаДата ))
#         Если('ДОКУМЕНТ.Папки.Тема'=="ТЕРМИНАЛ")
#            ДляВсех( Наименований )
#              Если( мПродНН[эм] == НомНомер ) 
#                 .мПродК[НомНомер] += Кол_во;
# Отладить();
#######
   ДляВсех(Наименований)
     Если( мПродК[НомНомер] != 0 )
        {
#          Сообщить(мПродК[НомНомер]);
#          Отладить();
          'НАИМ.Кол_во'=-(мПродК[НомНомер]);
          Сохранить(Наим);
        }
}